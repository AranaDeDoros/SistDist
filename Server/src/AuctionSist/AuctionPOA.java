package AuctionSist;


/**
* AuctionSist/AuctionPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from auction.idl
* miércoles 30 de mayo de 2018 05H11' CDT
*/

public abstract class AuctionPOA extends org.omg.PortableServer.Servant
 implements AuctionSist.AuctionOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("_get_originalPrice", new java.lang.Integer (0));
    _methods.put ("_get_finalPrice", new java.lang.Integer (1));
    _methods.put ("_get_name", new java.lang.Integer (2));
    _methods.put ("_get_client", new java.lang.Integer (3));
    _methods.put ("bid", new java.lang.Integer (4));
    _methods.put ("add", new java.lang.Integer (5));
    _methods.put ("remove", new java.lang.Integer (6));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // AuctionSist/Auction/_get_originalPrice
       {
         double $result = (double)0;
         $result = this.originalPrice ();
         out = $rh.createReply();
         out.write_double ($result);
         break;
       }

       case 1:  // AuctionSist/Auction/_get_finalPrice
       {
         double $result = (double)0;
         $result = this.finalPrice ();
         out = $rh.createReply();
         out.write_double ($result);
         break;
       }

       case 2:  // AuctionSist/Auction/_get_name
       {
         String $result = null;
         $result = this.name ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 3:  // AuctionSist/Auction/_get_client
       {
         String $result = null;
         $result = this.client ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 4:  // AuctionSist/Auction/bid
       {
         this.bid ();
         out = $rh.createReply();
         break;
       }

       case 5:  // AuctionSist/Auction/add
       {
         AuctionSist.AuctionClient cc = AuctionSist.AuctionClientHelper.read (in);
         this.add (cc);
         out = $rh.createReply();
         break;
       }

       case 6:  // AuctionSist/Auction/remove
       {
         AuctionSist.AuctionClient cc = AuctionSist.AuctionClientHelper.read (in);
         this.remove (cc);
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:AuctionSist/Auction:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Auction _this() 
  {
    return AuctionHelper.narrow(
    super._this_object());
  }

  public Auction _this(org.omg.CORBA.ORB orb) 
  {
    return AuctionHelper.narrow(
    super._this_object(orb));
  }


} // class AuctionPOA
